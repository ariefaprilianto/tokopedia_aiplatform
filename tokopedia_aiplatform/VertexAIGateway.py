from typing import Any, List, Optional
from langchain.llms import VertexAI
from pydantic import root_validator
from langchain.callbacks.manager import (
    # AsyncCallbackManagerForLLMRun,
    CallbackManagerForLLMRun,
)

class VertexAIGateway(VertexAI):
    api_key: str

    @root_validator()
    def validate_environment(cls, values):
        return values

    def _call(
        self,
        prompt: str,
        stop: Optional[List[str]] = None,
        run_manager: Optional[CallbackManagerForLLMRun] = None,
        **kwargs: Any,
    ) -> str:
        """Call Vertex model to get predictions based on the prompt.

        Args:
            prompt: The prompt to pass into the model.
            stop: A list of stop words (optional).
            run_manager: A Callbackmanager for LLM run, optional.

        Returns:
            The string generated by the model.
        """
        return self._predict(prompt, stop, api_key=self.api_key, **kwargs)